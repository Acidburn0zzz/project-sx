#!/usr/bin/python3

# stationx-driver: Universal driver for StationX computers
# Copyright (C) 2017 StationX, Ltd.
# Copyright (C) 2005-2016 System76, Inc.
#
# This file is part of `stationx-driver`.
#
# `stationx-driver` is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# `stationx-driver` is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with `stationx-driver`; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

"""
Test Airplane Mode workaround.
"""

import time
start_time = time.monotonic()
import argparse
import os
import sys
import logging

from gi.repository import GLib

import stationxdriver
from stationxdriver import daemon


logging.basicConfig(
    level=logging.DEBUG,
    style='{',
    format='{asctime}  {levelname}  {message}',
)
log = logging.getLogger()

parser = argparse.ArgumentParser()
parser.add_argument('--model', help='force model rather than detecting it')
parser.add_argument('--debug', action='store_true', default=False,
    help='print loaded modules',
)
args = parser.parse_args()

if os.getuid() != 0:
    sys.exit('Error: stationx-daemon must be run as root')
log.info('**** Process start at monotonic time %r', start_time)

if not args.model:
    model = daemon.load_json_conf('/etc/stationx-daemon.json').get('model')
    args.model = (model or stationxdriver.get_product_name())
log.info('model: %r', args.model)
brightness = daemon.run_brightness(args.model)
airplane = daemon.run_airplane(args.model)
acpi = daemon.run_firmware_acpi_interrupt(args.model)
ess_dac_autoswitch = daemon.run_ess_dac_autoswitch(args.model)

mainloop = GLib.MainLoop()
if args.debug:
    names = sorted(sys.modules)
    for name in names:
        print(name)
    print(len(names))
mainloop.run()

